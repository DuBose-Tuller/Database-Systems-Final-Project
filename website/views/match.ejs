<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Match Page</title>
    <link rel="stylesheet" href="/styles.css">

    <style>
      .small-dropdown {
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
        font-size: 14px;
        width: 150px;
    }

    #tossupHeading {
      display: none;
    }

    #buttonContainer button {
      display: inline-block;
      margin-right: 10px;
      margin-top: 20px;
    }
    
    body {
      font-family: Arial, sans-serif;
      background-color: #f5f5f5; /* Light Gray */
      margin: 0;
      padding: 0;
      color: #00205b; /* NAQT Blue */
    }

    /* Page header */
    header {
      background-color: #ffc72c; /* NAQT Gold */
      padding: 20px;
      text-align: center;
      color: #00205b; /* NAQT Blue */
    }

    /* Main content */
    main {
      padding: 20px;
    }

    table {
      border-collapse: collapse;
      width: 75%;
      margin-bottom: 20px;
    }

    th, td {
      border: 1px solid #dddddd;
      text-align: left;
      padding: 8px;
    }

    th {
      text-align: center;
      color: #00205b; /* NAQT Blue */
      background-color: #ffc72c; /* NAQT Gold */
    }

    .small-dropdown {
      width: 100%;
      padding: 6px 10px;
      border-radius: 4px;
      border: 1px solid #ccc;
    }

    /* Background color for table rows */
    tr {
      background-color: #f5f5f5; /* Light Gray */
    }

    button:hover {
      background-color: #ffdb7a; /* Lighter NAQT Gold on hover */
    }

    #tossupText {
      text-align: left;
    }

    #tossupAnswer {
      text-align: left;
    }

    #paragraphForTossupAnswer {
      text-align: left;
      display: none 
    }

    </style>
  </head>

  <body id="main-body">
    <div id="navbar">
      <a id="home" href="/index.html">Home</a>
      <a id="teamStats" href="/teamStats.html">Team Stats</a>
      <a id="register" href="/register.html">Register</a>
    </div>

    <section id="content-section">

      <h2>
        <span id="greetingsMessage">Greetings! To start the match, 
        click the "Get Next Tossup" button below! Before additional clicks of "Get Next Tossup" button, 
        remember to enter the points of the players who got the tossup or negged!
        </span>
      </h2>

      <h2>
        <span id="tossupHeading">Tossup <span id="tossupNumber">0</span>
        <span id="tossupCategory"></span> <span id="tossupSubcategory"></span>
      </h2>

      <div id="tossupTextAndAnswer">
        <p id="tossupText"></p>
        <p id="paragraphForTossupAnswer"><b>ANSWER:</b> <span id="tossupAnswer"></span></p>
      </div>

      
      <p>Players in Match:</p>
    <table>
      <tr>
        <th colspan="2"><%= results[0].name %></th>
        <th colspan="2"><%= results[results.length-1].name %></th>
      </tr>
      
      <% let t = 0 %>
      <% let b = results.length - 1 %>
      <% var homePlayer = "" %>
      <% var awayPlayer = "" %>
      <% while(t <= b) { %>
        <tr>
          <% if(results[t].name == results[0].name){ %>
            <%= homePlayer = results[t].username %>
            <% t++ %>
          <% } %>
    
          <% if(results[b].name == results[results.length-1].name){ %>
            <%= awayPlayer = results[b].username %>
            <% b-- %>
          <% } %>
    
          <td id="playerName"><%= homePlayer %></td>
          <td>
            <select id="<%=results[t].username %>" class="small-dropdown" onchange="saveValue(this)">
              <option value="" selected></option>
              <option value="-5">-5</option>
              <option value="10">10</option>
              <option value="15">15</option>
            </select>
          </td>
          <td><%= awayPlayer %></td>
          <td>
            <select id="<%=results[b].username %>" class="small-dropdown" onchange="saveValue(this)">
              <option value="" selected></option>
              <option value="-5">-5</option>
              <option value="10">10</option>
              <option value="15">15</option>
            </select>
          </td>
    
          <% var homePlayer = "" %>
          <% var awayPlayer = "" %>
        </tr>
      <% } %>
    </table>

    <div id="buttonContainer">
      <button onclick="getTossup()">Get Next Tossup</button>
      <!-- <button onclick="getAllSavedValues()">End Match</button> -->
    </div>

    </section>
  </body>
</html>


<script>
    function saveValue(dropdown) {
      var selectedValue = dropdown.value;
      var dropdownId = dropdown.id;

      // Save the selected value in the browser's localStorage
      localStorage.setItem(dropdownId, selectedValue);
    }

    function getAllSavedValues() {
      // Retrieve all saved values from localStorage
      var savedValues = {};

      for (var i = 0; i < localStorage.length; i++) {
        var key = localStorage.key(i);
        savedValues[key] = localStorage.getItem(key);
      }

      console.log(savedValues); // Modify this part as needed (e.g., display, process, etc.)
    }

    // Function to handle the API call
    function getTossup() {
      // Update the scores in the database
      updateScores();

      var xhr = new XMLHttpRequest();
      xhr.open('GET', 'https://www.qbreader.org/api/random-tossup', true);
      xhr.onreadystatechange = function () {
        if (xhr.readyState === XMLHttpRequest.DONE) {
        if (xhr.status === 200) {
          var data = JSON.parse(xhr.responseText);
          console.log("Data received:", data);
          let category = data.tossups[0]["category"];
          let subCategory = data.tossups[0]["subcategory"];
          let tossupText =  data.tossups[0]["question"];
          let tossupAnswer = data.tossups[0]["formatted_answer"];
          document.getElementById("tossupText").innerHTML = boldPowerText(tossupText);
          document.getElementById("tossupAnswer").innerHTML = tossupAnswer;
          document.getElementById("tossupCategory").innerText = "- " + category
          document.getElementById("tossupSubcategory").innerText = "(" + subCategory + ")"
          // Process and use the retrieved data in your application
        } else {
          console.error('Error:', xhr.status);
        }
        }
      };
      
      xhr.send();
      
      
      updateStylingForTossup()

      

      

      // Reset all dropdowns to their initial state
      var dropdowns = document.querySelectorAll('.small-dropdown');
      dropdowns.forEach(function(dropdown) {
        dropdown.selectedIndex = 0; // Set to the first option (hidden option)
      });
    }

    function updateStylingForTossup() {
      // Make the initial greeting message invisible
      var greetingsElement = document.getElementById("greetingsMessage")
      greetingsElement.style.display = "none"

      // Make the tossup heading invisible
      document.getElementById("tossupHeading").style.display = "none"

      // Update the Tossup number
      var tossupNumberElement = document.getElementById("tossupNumber")
      var currentTossupNumber = parseInt(tossupNumberElement.innerText, 10)
      var nextTossupNumber = currentTossupNumber + 1
      tossupNumberElement.innerText = nextTossupNumber

      // Make the tossup heading visible
      tossupHeading.style.display = "inline"   

      // Make the tossup answerline visible
      var paragraphForTossupAnswer = document.getElementById("paragraphForTossupAnswer")
      paragraphForTossupAnswer.style.display = "inline"
      
      // Put border around table
      var tossupTextAndAnswerElement = document.getElementById("tossupTextAndAnswer")
      tossupTextAndAnswerElement.style.border = "2px solid black";
    }

    function boldPowerText(tossupText) {
      if (tossupText.includes("(*)")) { // might not work on old browsers
        return "<b>" + tossupText.replace("(*)", "(*)</b>")
      }
      return tossupText
    }

    function updateScores() {
      for (var row = 1; row < 6 ; row++) {
        teamOnePlayerRow = table.rows[row];
        
        if (teamOnePlayerRow.cells[0].innertext != "") {
          teamOnePlayerCell = teamOnePlayerRow.cells[1]
          teamOnePlayerDropdown = teamOnePlayerCell.getElementsByTagName("select")[0]
          updatePlayerScore(teamOnePlayerDropdown);
        }

        if (teamTwoPlayerRow.cells[2].innertext != "") {
          teamOnePlayerCell = teamOnePlayerRow.cells[3]
          teamTwoPlayerDropdown = teamTwoPlayerCell.getElementsByTagName("select")[0]
          updatePlayerScore(teamTwoPlayerDropdown);
        }
      }
	  }

    function updatePlayerScore(playerDropdown) {
      console.log("here")

      let playerPoints = playerDropdown.value
      
      let username = playerDropdown.id;
      let matchID = NULL;
      let numPowersOnTossup = (playerPoints == 15) ? 1 : 0;
      let numTensOnTossup = (playerPoints == 10) ? 1 : 0;
      let numNegsOnTossup = (playerPoints == -5) ? 1 : 0;
      
      const responsePromise = fetch("/update-player-score/?username=" + username + 
                                                          "&matchID=" + matchID + 
                                                          "&numPowersOnTossup=" + numPowersOnTossup + 
                                                          "&numTensOnTossup=" + numTensOnTossup + 
                                                          "&numNegsOnTossup=" + numNegsOnTossup, {
        method: "GET",
        headers: {
          "Content-type": "application/json; charset=UTF-8"
        }
      });

      responsePromise.then(
        // Fulfilled
        async (response) => {
          // console.log("Got a response for match creation!")
          // console.log(await response)
          // console.log(await response.insertId)
          let dbResult = await response.json()
          console.log(dbResult)
          window.location.replace("/match?matchID=" + dbResult.insertId)
        },
        // Error
        (error) => {
          alert("Failed to start match")
          console.log(error)
        })
    }

      /*
        for each player:
          insertPlayerScores(
            username = get from the id of the table row
            match_id = get from the match_id passed into the view page
            num_powers = 1 if player got 15 points
            num_tens = 1 if power got 10 points
            num_negs = 1 if power got -5 points
            num_tossups_heard = 1
          )


      What do we need for the database? 
      - username - 
      - match_id - 
      - num_powers - Increment the value in the database row 
      - num_tens - 
      - num_negs - 
      - num_tossups_heard - 
      */

    // Attach the API call function to the button click event
    document.getElementById('getTossup').addEventListener('click', callAPI);
    


</script>